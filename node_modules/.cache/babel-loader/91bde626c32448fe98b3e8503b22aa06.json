{"ast":null,"code":"import _defineProperty from \"/Users/babakiki/LambdaSchoolWork/Labs/shopping/ecommerce-site/store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/babakiki/LambdaSchoolWork/Labs/shopping/ecommerce-site/store/src/context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); // Provoider\n// Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      // console.log('Hello from detail');\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      console.log(\"Hello from add to cart \".concat(id));\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          product: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n\n      ;\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/babakiki/LambdaSchoolWork/Labs/shopping/ecommerce-site/store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","console","log","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,aAAN,EAAvB,C,CACA;AACA;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCM,KADsC,GAC9B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENL,MAAAA,aAAa,EAAEA,aAFT;AAGNM,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,SAAS,EAAE,KAJL;AAKNC,MAAAA,YAAY,EAAER,aALR;AAMNS,MAAAA,YAAY,EAAE,CANR;AAONC,MAAAA,OAAO,EAAE,CAPH;AAQNC,MAAAA,SAAS,EAAE;AARL,KAD8B;;AAAA,SActCC,WAdsC,GAcxB,MAAM;AAClB,UAAIC,YAAY,GAAG,EAAnB;AACAd,MAAAA,aAAa,CAACe,OAAd,CAAuBC,IAAD,IAAU;AAC9B,cAAMC,UAAU,qBAAQD,IAAR,CAAhB;;AACAF,QAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAf;AACD,OAHD;AAIA,WAAKC,QAAL,CAAc,MAAM;AAClB,eAAO;AAAEZ,UAAAA,QAAQ,EAAEQ;AAAZ,SAAP;AACD,OAFD;AAGD,KAvBqC;;AAAA,SAyBtCK,OAzBsC,GAyB3BC,EAAD,IAAQ;AAChB,YAAMC,OAAO,GAAG,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,IAApB,CAA0BN,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAA/C,CAAhB;AACA,aAAOC,OAAP;AACD,KA5BqC;;AAAA,SA6BtCE,YA7BsC,GA6BtBH,EAAD,IAAQ;AACrB;AACA,YAAMC,OAAO,GAAG,KAAKF,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKF,QAAL,CAAc,MAAM;AAClB,eAAO;AAAEjB,UAAAA,aAAa,EAAEoB;AAAjB,SAAP;AACD,OAFD;AAGD,KAnCqC;;AAAA,SAoCtCG,SApCsC,GAoCzBJ,EAAD,IAAQ;AAClBK,MAAAA,OAAO,CAACC,GAAR,kCAAsCN,EAAtC;AACA,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,QAAf,CAAnB;AACA,YAAMqB,KAAK,GAAGb,YAAY,CAACc,OAAb,CAAqB,KAAKT,OAAL,CAAaC,EAAb,CAArB,CAAd;AACA,YAAMC,OAAO,GAAGP,YAAY,CAACa,KAAD,CAA5B;AACAN,MAAAA,OAAO,CAACQ,MAAR,GAAiB,IAAjB;AACAR,MAAAA,OAAO,CAACS,KAAR,GAAgB,CAAhB;AACA,YAAMC,KAAK,GAAGV,OAAO,CAACU,KAAtB;AACAV,MAAAA,OAAO,CAACW,KAAR,GAAgBD,KAAhB;AACA,WAAKb,QAAL,CACE,MAAM;AACJ,eAAO;AAAEG,UAAAA,OAAO,EAAEP,YAAX;AAAyBP,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqBc,OAArB;AAA/B,SAAP;AACD,OAHH,EAIE,MAAM;AACJ,aAAKY,SAAL;AACD,OANH;AAQD,KArDqC;;AAAA,SAsDtCC,SAtDsC,GAsDzBd,EAAD,IAAQ;AAClB,YAAMC,OAAO,GAAG,KAAKF,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKF,QAAL,CAAc,MAAM;AAClB,eAAO;AAAET,UAAAA,YAAY,EAAEY,OAAhB;AAAyBb,UAAAA,SAAS,EAAE;AAApC,SAAP;AACD,OAFD;AAGD,KA3DqC;;AAAA,SA6DtC2B,UA7DsC,GA6DzB,MAAM;AACjB,WAAKjB,QAAL,CAAc,MAAM;AAClB,eAAO;AAAEV,UAAAA,SAAS,EAAE;AAAb,SAAP;AACD,OAFD;AAGD,KAjEqC;;AAAA,SAkEtC4B,SAlEsC,GAkEzBhB,EAAD,IAAQ;AAClB,UAAIiB,QAAQ,GAAG,CAAC,GAAG,KAAKhC,KAAL,CAAWE,IAAf,CAAf;AACA,YAAM+B,eAAe,GAAGD,QAAQ,CAACf,IAAT,CAAeN,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAApC,CAAxB;AAEA,YAAMO,KAAK,GAAGU,QAAQ,CAACT,OAAT,CAAiBU,eAAjB,CAAd;AACA,YAAMjB,OAAO,GAAGgB,QAAQ,CAACV,KAAD,CAAxB;AAEAN,MAAAA,OAAO,CAACS,KAAR,GAAgBT,OAAO,CAACS,KAAR,GAAgB,CAAhC;AACAT,MAAAA,OAAO,CAACW,KAAR,GAAgBX,OAAO,CAACS,KAAR,GAAgBT,OAAO,CAACU,KAAxC;AAEA,WAAKb,QAAL,CACE,MAAM;AACJ,eAAO;AAAEX,UAAAA,IAAI,EAAE,CAAC,GAAG8B,QAAJ;AAAR,SAAP;AACD,OAHH,EAIE,MAAM;AACJ,aAAKJ,SAAL;AACD,OANH;AAQD,KApFqC;;AAAA,SAqFtCM,SArFsC,GAqFzBnB,EAAD,IAAQ;AAClB,UAAIiB,QAAQ,GAAG,CAAC,GAAG,KAAKhC,KAAL,CAAWE,IAAf,CAAf;AACA,YAAM+B,eAAe,GAAGD,QAAQ,CAACf,IAAT,CAAcN,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAAlC,CAAxB;AAEA,YAAMO,KAAK,GAAGU,QAAQ,CAACT,OAAT,CAAiBU,eAAjB,CAAd;AACA,YAAMjB,OAAO,GAAGgB,QAAQ,CAACV,KAAD,CAAxB;AAEAN,MAAAA,OAAO,CAACS,KAAR,GAAgBT,OAAO,CAACS,KAAR,GAAgB,CAAhC;;AAEA,UAAGT,OAAO,CAACS,KAAR,KAAkB,CAArB,EAAuB;AACrB,aAAKU,UAAL,CAAgBpB,EAAhB;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACW,KAAR,GAAgBX,OAAO,CAACS,KAAR,GAAgBT,OAAO,CAACU,KAAxC;AACF,aAAKb,QAAL,CACE,MAAM;AACJ,iBAAO;AAAEX,YAAAA,IAAI,EAAE,CAAC,GAAG8B,QAAJ;AAAR,WAAP;AACD,SAHH,EAIE,MAAM;AACJ,eAAKJ,SAAL;AACD,SANH;AAQD;;AAAA;AACF,KA3GuC;;AAAA,SA4GtCO,UA5GsC,GA4GxBpB,EAAD,IAAQ;AACnB,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,QAAf,CAAnB;AACA,UAAI+B,QAAQ,GAAG,CAAC,GAAG,KAAKhC,KAAL,CAAWE,IAAf,CAAf;AAEA8B,MAAAA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAiBzB,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAtC,CAAX;AAEA,YAAMO,KAAK,GAAGb,YAAY,CAACc,OAAb,CAAqB,KAAKT,OAAL,CAAaC,EAAb,CAArB,CAAd;AACA,UAAIsB,cAAc,GAAG5B,YAAY,CAACa,KAAD,CAAjC;AACAe,MAAAA,cAAc,CAACb,MAAf,GAAwB,KAAxB;AACAa,MAAAA,cAAc,CAACZ,KAAf,GAAuB,CAAvB;AACAY,MAAAA,cAAc,CAACV,KAAf,GAAuB,CAAvB;AAEA,WAAKd,QAAL,CACE,MAAM;AACJ,eAAO;AACLX,UAAAA,IAAI,EAAE,CAAC,GAAG8B,QAAJ,CADD;AAEL/B,UAAAA,QAAQ,EAAE,CAAC,GAAGQ,YAAJ;AAFL,SAAP;AAID,OANH,EAOE,MAAM;AACJ,aAAKmB,SAAL;AACD,OATH;AAWD,KAnIqC;;AAAA,SAoItCU,SApIsC,GAoI1B,MAAM;AAChB,WAAKzB,QAAL,CACE,MAAM;AACJ,eAAO;AAAEX,UAAAA,IAAI,EAAE;AAAR,SAAP;AACD,OAHH,EAIE,MAAM;AACJ,aAAKM,WAAL;AACA,aAAKoB,SAAL;AACD,OAPH;AASD,KA9IqC;;AAAA,SA+ItCA,SA/IsC,GA+I1B,MAAM;AAChB,UAAIW,QAAQ,GAAG,CAAf;AACA,WAAKvC,KAAL,CAAWE,IAAX,CAAgBsC,GAAhB,CAAqB7B,IAAD,IAAW4B,QAAQ,IAAI5B,IAAI,CAACgB,KAAhD;AACA,YAAMc,OAAO,GAAGF,QAAQ,GAAG,GAA3B;AACA,YAAMG,GAAG,GAAGC,UAAU,CAACF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAtB;AACA,YAAMjB,KAAK,GAAGY,QAAQ,GAAGG,GAAzB;AACA,WAAK7B,QAAL,CAAc,MAAM;AAClB,eAAO;AACLR,UAAAA,YAAY,EAAEkC,QADT;AAELjC,UAAAA,OAAO,EAAEoC,GAFJ;AAGLnC,UAAAA,SAAS,EAAEoB;AAHN,SAAP;AAKD,OAND;AAOD,KA5JqC;AAAA;;AAWtCkB,EAAAA,iBAAiB,GAAG;AAClB,SAAKrC,WAAL;AACD;;AAgJDsC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,MAAA,KAAK,oBACA,KAAK9C,KADL;AAEHkB,QAAAA,YAAY,EAAE,KAAKA,YAFhB;AAGHC,QAAAA,SAAS,EAAE,KAAKA,SAHb;AAIHU,QAAAA,SAAS,EAAE,KAAKA,SAJb;AAKHC,QAAAA,UAAU,EAAE,KAAKA,UALd;AAMHC,QAAAA,SAAS,EAAE,KAAKA,SANb;AAOHG,QAAAA,SAAS,EAAE,KAAKA,SAPb;AAQHC,QAAAA,UAAU,EAAE,KAAKA,UARd;AASHG,QAAAA,SAAS,EAAE,KAAKA;AATb,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaG,KAAKS,KAAL,CAAWC,QAbd,CADF;AAiBD;;AA/KqC;;AAiLxC,MAAMC,eAAe,GAAGpD,cAAc,CAACqD,QAAvC;AAEA,SAASnD,eAAT,EAA0BkD,eAA1B","sourcesContent":["import React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\n\nconst ProductContext = React.createContext();\n// Provoider\n// Consumer\n\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  };\n  componentDidMount() {\n    this.setProducts();\n  }\n  setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach((item) => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return { products: tempProducts };\n    });\n  };\n\n  getItem = (id) => {\n    const product = this.state.products.find((item) => item.id === id);\n    return product;\n  };\n  handleDetail = (id) => {\n    // console.log('Hello from detail');\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n  addToCart = (id) => {\n    console.log(`Hello from add to cart ${id}`);\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(\n      () => {\n        return { product: tempProducts, cart: [...this.state.cart, product] };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  openModal = (id) => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n  increment = (id) => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find((item) => item.id === id);\n\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState(\n      () => {\n        return { cart: [...tempCart] };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  decrement = (id) => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n\n    product.count = product.count - 1;\n  \n    if(product.count === 0){\n      this.removeItem(id)\n    } else {\n      product.total = product.count * product.price;\n    this.setState(\n      () => {\n        return { cart: [...tempCart] };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n}\n  removeItem = (id) => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    tempCart = tempCart.filter((item) => item.id !== id);\n\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      },\n      () => {\n        this.addTotals();\n      }\n    );\n  };\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] };\n      },\n      () => {\n        this.setProducts();\n        this.addTotals();\n      }\n    );\n  };\n  addTotals = () => {\n    let subTotal = 0;\n    this.state.cart.map((item) => (subTotal += item.total));\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      };\n    });\n  };\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}